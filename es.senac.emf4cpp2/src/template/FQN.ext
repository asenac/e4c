import org::eclipse::emf::ecore;

String getName(ENamedElement this) : 
	switch (name) {
		case "volatile"		: name + "_"
		case "export"		: name + "_"
		default: name
	};
String getNameUpper(ENamedElement this) :
	getName().toFirstUpper();

String getFQN(ENamedElement this, String separator) :
	let container = eContainer():
	if container != null && ENamedElement.isInstance(container) then
		((ENamedElement) container).getFQN(separator) + separator + getName()
	else
		getName();
		
String getFQN(ENamedElement this) : getFQN("::");


String getHeader(ENamedElement this, String suffix) : "EMF_CPP_" + getFQN("_").toUpperCase() + "_" + suffix + "_HPP";
String getHeader(ENamedElement this) : getHeader("");

String getFilePrefix(ENamedElement this) : getFQN("/");
String getCMakeFile(ENamedElement this) : getFQN("_") + ".cmake";
String getFwdFile(ENamedElement this) : getFilePrefix() + "/fwd.hpp";
String getIncFile(ENamedElement this) : getFilePrefix() + "/include.hpp";
String getMetaFile(ENamedElement this) : getFilePrefix() + "/meta.hpp";

String getTagName(EStructuralFeature this) : EContainingClass.name + "__" + name + "_tag";
String getTagFQN(EStructuralFeature this) : EContainingClass.EPackage.getFQN() + "::" + EContainingClass.name + "__" + name + "_tag";
String getMember(EStructuralFeature this) : EContainingClass.name + "__" + name;
String getTagMethod(EStructuralFeature this) : "getTag_" + getMember();
String getTagMethod(EClassifier this) : "getTag_" + name;

String getFactory(EPackage this) : name.toFirstUpper() + "Factory";
String getPackage(EPackage this) : name.toFirstUpper() + "Package";


String getListSeparator() : ",\n\t                          ";

String getContaimentPtr(EReference this) :
	"std::unique_ptr < " + EType.getFQN() + " >"
;
String getNoContaimentPtr(EReference this) :
	EType.getFQN() + "_ptr"
;

String getInsertMethod(EReference this) :
	if ordered then "push_back" else "insert";

String getReferenceType(EReference this) :
	if upperBound == 1 then
	(
		if containment then
			getContaimentPtr()
		else
			getNoContaimentPtr()
	)
	else
	(
		if containment && ordered then
			"std::vector < " + getContaimentPtr() + " >"
		else if containment then
			"std::set < " + getContaimentPtr() + " >"
		else if ordered then
			"std::vector < " + getNoContaimentPtr() + " >"
		else
			"std::set < " + getNoContaimentPtr() + " >"			
	)
;

String getNoContaimentType(EReference this) :
	if upperBound == 1 then
	(
		EType.getFQN() + "_ptr"
	)
	else
	(
		if ordered then
			"std::vector < " + EType.getFQN() + "_ptr >"
		else
			"std::set < " + EType.getFQN() + "_ptr >"			
	)
;

Boolean inheritFormEObject(EClass this) : ESuperTypes.isEmpty && EPackage.getFQN() != eClass().EPackage.getFQN();

String toCommaStringImpl(List[String] this) : toCommaString();
String toCommaString(List[String] this) : 
	if isEmpty then 
		"" 
	else 
	( 
		if size == 1 then 
			first() 
		else 
			first() + ", " + withoutFirst().toCommaStringImpl()
	)
;

String getType(ETypedElement this) :
	if EType == null then "void" else (if EClass.isInstance(EType) then EType.getFQN() + "_ptr" else EType.getFQN());
	
String getDecl(EParameter this) : getType() + " " + name;
String getPrefix(EOperation this) : EContainingClass.getName() + "::";
String getSignature(EOperation this, Boolean prefix) :
	getType() + " " + (if prefix then getPrefix() else "") + name + "(" + EParameters.getDecl().toCommaString() + ")";

String getProtectedRegion(EOperation this) : getSignature(true).replaceAll("\\(", "").replaceAll("\\)", "");

